{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","services/Person.js","Notification.js","index.js"],"names":["Filter","textFilter","handleChangeFilter","type","onChange","value","PersonForm","name","phone","handleChangeName","handleChangePhone","handleSubmit","onSubmit","Person","id","number","handleDelete","onClick","e","Persons","persons","filter","person","includes","map","URL","Notificacion","notification","className","message","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","setTextFilter","setNotification","useEffect","axios","get","then","response","data","event","target","preventDefault","trim","found","find","item","window","confirm","put","updatePerson","updateData","post","createPerson","createData","alert","delete","deletePerson","updatePersons","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.636c1c07.chunk.js","sourcesContent":["const Filter = ({textFilter, handleChangeFilter}) =>{\r\n    return (\r\n        <div>\r\n            <div>\r\n                filter show with: <input type=\"text\" onChange={handleChangeFilter} value={textFilter} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","const PersonForm = ({name, phone, handleChangeName, handleChangePhone, handleSubmit})=>{\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                name: <input type=\"text\" onChange={handleChangeName} value={name} />\r\n            </div>\r\n            <div>\r\n                phone: <input type=\"text\" onChange={handleChangePhone} value={phone} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" >add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default PersonForm\r\n","const Person = ({id,name, number, handleDelete}) =>{\r\n    return(<div>\r\n        <p>{name} {number} <button onClick={(e)=>{ handleDelete(id,name, e)}}>Delete</button></p>\r\n    </div>)\r\n}\r\nconst Persons = ({persons, textFilter, handleDelete})=>{\r\n    return (\r\n        <div>\r\n            {\r\n            persons\r\n            .filter(person =>{\r\n                if(textFilter === \"\" )\r\n                    return true\r\n                else \r\n                    return person.name.includes(textFilter)\r\n            })\r\n            .map(person => <Person \r\n                                key={person.id} \r\n                                id= {person.id}\r\n                                name={person.name} \r\n                                number={person.number} \r\n                                handleDelete= {handleDelete}/>)\r\n            }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\n//const URL = \"http://localhost:3001/persons\"\r\nconst URL = \"/api/persons\"\r\nexport const getAllPersons = () =>{\r\n    return axios.get(URL)\r\n        .then(response => response.data)\r\n}\r\n\r\nexport const createPerson = (person) =>{\r\n    return axios.post(URL, person )\r\n        .then (response => response.data)\r\n}\r\n\r\nexport const deletePerson = (id) =>{\r\n    const request = axios.delete(`${URL}/${id}`)\r\n    return request\r\n        \r\n}\r\n\r\nexport const updatePerson = (id, person) =>{\r\n    return axios.put(`${URL}/${id}`, person)\r\n        .then (response => response.data)\r\n}\r\n\r\n\r\n","export const Notificacion = ({notification}) =>{\r\n    if(notification === null )\r\n    return null;\r\n\r\n    return <div className={ `message ${notification.type}`}>{notification.message}</div>\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\nimport Filter from './Filter.js'\nimport PersonForm from './PersonForm.js'\nimport Persons from './Persons.js'\nimport {getAllPersons, createPerson, deletePerson, updatePerson} from './services/Person.js' \nimport {Notificacion} from './Notification.js'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ textFilter, setTextFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  useEffect(()=>{\n    getAllPersons()\n    .then(data => {\n      setPersons(data)\n    })\n  }, [])\n\n  const handleChangeName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleChangePhone = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleChangeFilter = (event) => {\n    setTextFilter(event.target.value)\n    setNotification(null)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    if(newName.trim() === \"\" ){\n      alert(\"The name is required\")\n      return \n    }\n\n    const found = persons.find(item => item.name === newName.trim())\n    const person = {name:newName.trim(), number: newPhone.trim(), id:0}\n    // existe verificar si quiere actualizarlo\n    if (typeof found !== \"undefined\" ){\n      if(window.confirm(`${found.name} is already added to phonebook, replace the old number with a new one?`)){\n        updatePerson(found.id, person)\n        .then(updateData => {\n          setPersons(persons.map(item => item.id !== found.id ? item : updateData ))\n          setNotification({\"type\":\"success\", \"message\":`Updated ${updateData.name}`})\n        })\n      }\n      \n    }else{\n      // crear una nuevo\n      \n      createPerson(person)\n        .then(createData => {\n          setPersons([...persons, createData])\n          setNotification({\"type\":\"success\", \"message\":`Added ${createData.name}`})\n          setNewName(\"\")\n          setNewPhone(\"\")\n        })\n    }\n    \n  }\n  const handleDelete = (id,name, event) =>{\n    if (window.confirm(`delete ${name}?`)){\n      \n      deletePerson(id)\n        .then(data => { \n          \n          const updatePersons = persons.filter((item) => item.id !== id)\n          setPersons(updatePersons)\n          setNotification({\"type\":\"success\", \"message\":`Deleted ${name}`})\n        })\n        .catch(error =>{\n          \n          setNotification({\"type\":\"error\", \"message\":`The information ${name} has already been removed from server`})\n        })\n    }\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notificacion notification={notification}/>\n      <Filter textFilter= {textFilter} handleChangeFilter= {handleChangeFilter} />\n      <h2>add a new</h2>\n      <PersonForm \n        name={newName} \n        phone={newPhone} \n        handleChangeName={handleChangeName} \n        handleChangePhone={handleChangePhone}  \n        handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} textFilter={textFilter} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}